generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid()) @map("_id") @db.Uuid
  email          String         @unique
  superAdmin     Boolean        @default(false)
  name           String?
  password       String?
  providers      UserProvider[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  tenants        TenantUser[]
  adminOfTenants Tenant[]
}

model UserProvider {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      String   @db.Uuid
  provider    String
  providerId  String
  accessToken String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([provider, providerId])
}

model Tenant {
  id      String       @id @default(uuid()) @map("_id") @db.Uuid
  name    String       @unique
  admin   User         @relation(fields: [adminId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  adminId String       @db.Uuid
  users   TenantUser[]
}

model TenantUser {
  tenant       Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tenantId     String   @db.Uuid
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId       String   @db.Uuid
  assignedById String   @db.Uuid
  assignedAt   DateTime @default(now())

  @@id([tenantId, userId])
}
